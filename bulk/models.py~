from django.db import models
from django.contrib import admin

# Create your models here.
'''
Person class
Customer class
Contact class
Message class
Service_log class

/NANA B./
destroy person class.
include all its attributes to Customer.
create class Group with attributes
groupname, date_created, date_updated. They should be like the blog project dates.
it should have a FK field that links to Customer
and in the Contact class it should have
a FK field to Group class and Customer
so the contact class has two FK fields  

/*************************************/

'''







class Customer(models.Model):
      fistname = models.CharField(max_length=30)

      lastname = models.CharField(max_length=30)

      email = models.EmailField(max_length=254,unique=True)

      mobilenumber=models.PositiveIntegerField(blank=True,unique=True)

      dateofbirth=models.DateField()

      gender=models.CharField(max_length=30)

      companyname=models.CharField(max_length=30,unique=True)

      postalAddress=models.TextField()


      
 
      def __unicode__(self):
             return self.email

'''
describing the customer class
inside the customer class we have an email,mobile number ,date of birth ,customer's company name and then their postal address.
the email field should be unique in our database and have a maximum length of 254 and()

 
'''

class Contact(models.Model):

      groupname=models.CharField(max_length=100)



      customer=models.ForeignKey(Customer,related_name='contacts')
      
      
      def viewcontact():
          pass
      def updatecontact():
          pass
      def deletecontact():
          pass
      def saveContact():
          pass



     

      def __unicode__(self):
           return self.groupname







class Group(models.Model):
      groupname=models.CharField(max_length=30)

      datecreated=models.DateField(auto_now=True)
      dateupdated=models.DateField(auto_now=True)
      customer=models.ForeignKey(Customer,related_name='groups')

      contact=models.ForeignKey(Contacts,related_name='groups')
     

      def __unicode__(self):
             return self.groupname




class Message(models.Model):
      subject=models.CharField(max_length=30)

      sender=models.CharField(max_length=30)

      receiver=models.CharField(max_length=30)

      scheduledate=models.DateField()

      customer=models.ForeignKey(Customer,related_name='messages')

      def sendSms():
          pass


      def createmessagelog():
          pass
      def usetemplate():
          pass

      def __unicode__(self):
             return self.subject









     




class Servicelog(models.Model):
      smsstatus=models.TextField()

      def createservicelog():
          pass
      


      def __unicode__(self):
             return self.smsstatus


admin.site.register(Servicelog)

admin.site.register(Message)

admin.site.register(Contact)

admin.site.register(Person)

admin.site.register(Customer)





      
